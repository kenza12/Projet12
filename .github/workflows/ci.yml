# Nom du workflow
name: CI

# DÃ©clencheur du workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install MySQL on Ubuntu
        if: runner.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo service mysql start
          sudo mysql -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.ADMIN_DB_PASSWORD }}';"
          sudo mysql -e "FLUSH PRIVILEGES;"
          while ! mysqladmin ping -h "127.0.0.1" --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done

      - name: Install MySQL on macOS
        if: runner.os == 'macos-latest'
        run: |
          brew update
          brew install mysql
          brew services start mysql
          mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.ADMIN_DB_PASSWORD }}';"
          mysql -u root -e "FLUSH PRIVILEGES;"
          while ! mysqladmin ping -h "127.0.0.1" --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done

      - name: Install MySQL on Windows
        if: runner.os == 'windows-latest'
        run: |
          choco install mysql
          Start-Service mysql
          mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.ADMIN_DB_PASSWORD }}';"
          mysql -u root -e "FLUSH PRIVILEGES;"
          while ! mysqladmin ping -h "127.0.0.1" --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done

      - name: Install dependencies on Ubuntu and macOS
        if: runner.os != 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Install dependencies on Windows
        if: runner.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      - name: Create .env file from secret
        run: |
          echo -e "${{ secrets.ENV_FILE }}" > .env
          cat .env

      - name: Show help for application
        run: |
          pipenv run python epicevents/main.py --help

      - name: Run tests on Ubuntu and macOS
        if: runner.os != 'windows-latest'
        run: |
          pipenv run pytest -v tests/

      - name: Run tests on Windows
        if: runner.os == 'windows-latest'
        run: |
          pipenv run pytest -v tests/
