name: CI

# Déclencheur du workflow: Déclenche le workflow à chaque push sur la branche main ou à chaque PR vers la branche main.
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Définit les jobs à exécuter: build (nom du job)
jobs:
  build:
    runs-on: ubuntu-latest # Utilise Ubuntu pour exécuter le job

    # Définit les étapes du job
    steps:
      # Utilise l'action actions/checkout@v2 pour vérifier(cloner) le code du dépôt pour permettre aux étapes suivantes du workflow d'accéder au code source.
      - name: Checkout code
        uses: actions/checkout@v2

      # Utilise l'action actions/setup-python@v2 pour configurer Python. Elle permet de s'assurer que la version de Python requise est installée et disponible pour les étapes suivantes du workflow.
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      # Start MySQL on Ubuntu
      - name: Install and start MySQL on Ubuntu
        run: |
          sudo apt-get update
          sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password ${{ secrets.ADMIN_DB_PASSWORD }}"
          sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password ${{ secrets.ADMIN_DB_PASSWORD }}"
          sudo apt-get install -y mysql-server
          sudo systemctl start mysql
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -e "ALTER USER 'root'@'127.0.0.1' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.ADMIN_DB_PASSWORD }}';"
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -e "FLUSH PRIVILEGES;"
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -e "CREATE USER 'root'@'127.0.0.1' IDENTIFIED WITH 'mysql_native_password' BY '${{ secrets.ADMIN_DB_PASSWORD }}';"
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -e "GRANT ALL PRIVILEGES ON *.* TO 'root'@'127.0.0.1' WITH GRANT OPTION;"
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -e "FLUSH PRIVILEGES;"
          sudo mysql -u root -p${{ secrets.ADMIN_DB_PASSWORD }} -h 127.0.0.1 -e "status"

      # Check environment variable
      - name: Check environment variable
        run: echo "DB_PASSWORD is ${{ secrets.ADMIN_DB_PASSWORD }}"

      # Install dependencies on Ubuntu
      - name: Install dependencies on Ubuntu
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install

      # Recrée le fichier .env à partir du contenu stocké dans le secret ENV_FILE.
      - name: Create .env file from secret
        run: |
          echo -e "${{ secrets.ENV_FILE }}" > .env
          cat .env

      # Afficher le help de l'application
      - name: Show help for application
        run: |
          pipenv run python epicevents/main.py --help

      # Exécute les tests sur Ubuntu
      - name: Run tests on Ubuntu
        run: |
          pipenv run pytest -v tests/
